AWSTemplateFormatVersion: "2010-09-09"
Description: container on ecs cluster

Resources:
  
  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: apis
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue ECSTaskExecutionRole
      ContainerDefinitions:
        - Name: nodeappapi
          Image: 514334837329.dkr.ecr.ca-central-1.amazonaws.com/node_app:latest
          Cpu: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 3000
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: 'apis'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'nodeapp-api'

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      ServiceName: nodeapp-service
      TaskDefinition: !Ref Task
      Cluster: !ImportValue 'ECSCluster'
      LaunchType: FARGATE
      DesiredCount: 0
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !ImportValue Subnet1
            - !ImportValue Subnet2
          SecurityGroups:
            - !ImportValue ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: nodeappapi
          ContainerPort: 3000
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: nodeapp-tg
      VpcId: !ImportValue VPC
      Port: 80
      Protocol: HTTP
      Port: 3000
      Protocol: TCP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 300
      HealthCheckPath: /stat
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 120
      HealthyThresholdCount: 10
      TargetType: ip

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !ImportValue Listener
      Priority: 2
      Conditions:
        - Field: path-pattern
          Values:
            - /api/node*
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward


Outputs:

  ApiEndpoint:
    Description: NodeApp Endpoint
    Value: !Join ['', ['http://', !ImportValue DomainName, '/api/nodeapp']]
    Export:
      Name: 'NodeAppApiEndpoint'